/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.9.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.example.controller;

import org.springframework.format.annotation.DateTimeFormat;
import com.example.model.ErrorResponse;
import java.time.LocalDate;
import com.example.model.OrderStatusReportResponse;
import com.example.model.PaginatedOrderResponse;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-05-04T15:16:19.844067600+05:30[Asia/Calcutta]", comments = "Generator version: 7.9.0")
@Validated
@Tag(name = "Reporting", description = "Reports and analytics")
public interface ReportingApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /api/v1/report : Get a summary report of orders by status
     * Retrieves a count of orders broken down by their current logistics status. Consider adding date range filters.
     *
     * @return Successfully retrieved order report. (status code 200)
     *         or Authentication information is missing or invalid. (status code 401)
     */
    @Operation(
        operationId = "getReport",
        summary = "Get a summary report of orders by status",
        description = "Retrieves a count of orders broken down by their current logistics status. Consider adding date range filters.",
        tags = { "Reporting" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Successfully retrieved order report.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = OrderStatusReportResponse.class))
            }),
            @ApiResponse(responseCode = "401", description = "Authentication information is missing or invalid.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ErrorResponse.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/api/v1/report",
        produces = { "application/json" }
    )
    
    default ResponseEntity<OrderStatusReportResponse> getReport(
        
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"cancelledOrders\" : 7, \"outForDeliveryOrders\" : 1, \"deliveredOrders\" : 5, \"failedOrders\" : 2, \"totalOrders\" : 0, \"pendingOrders\" : 6, \"inProgressOrders\" : 5 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"message\" : \"Order not found.\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /api/v1/shipping-overview : Get daily shipping overview (Paginated)
     * Returns a paginated list of orders relevant to shipping operations for a specific day (e.g., orders delivered or out for delivery on that day).
     *
     * @param date Date for which to retrieve the shipping overview (YYYY-MM-DD). (required)
     * @param limit Maximum number of orders to return per page. (optional, default to 50)
     * @param offset Number of orders to skip for pagination. (optional, default to 0)
     * @return Successfully retrieved orders for the specified day. (status code 200)
     *         or Invalid date format or parameters. (status code 400)
     *         or Authentication information is missing or invalid. (status code 401)
     */
    @Operation(
        operationId = "getShippingOverview",
        summary = "Get daily shipping overview (Paginated)",
        description = "Returns a paginated list of orders relevant to shipping operations for a specific day (e.g., orders delivered or out for delivery on that day).",
        tags = { "Reporting" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Successfully retrieved orders for the specified day.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = PaginatedOrderResponse.class))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid date format or parameters.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ErrorResponse.class))
            }),
            @ApiResponse(responseCode = "401", description = "Authentication information is missing or invalid.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ErrorResponse.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/api/v1/shipping-overview",
        produces = { "application/json" }
    )
    
    default ResponseEntity<PaginatedOrderResponse> getShippingOverview(
        @NotNull @Parameter(name = "date", description = "Date for which to retrieve the shipping overview (YYYY-MM-DD).", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "date", required = true) @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) LocalDate date,
        @Min(1) @Parameter(name = "limit", description = "Maximum number of orders to return per page.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "limit", required = false, defaultValue = "50") Integer limit,
        @Min(0) @Parameter(name = "offset", description = "Number of orders to skip for pagination.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "offset", required = false, defaultValue = "0") Integer offset
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"metadata\" : { \"totalItems\" : 153, \"offset\" : 40, \"limit\" : 20 }, \"data\" : [ { \"customerResponse\" : { \"phoneNumber\" : \"+919876543210\", \"address\" : { \"city\" : \"Coimbatore\", \"street\" : \"15, Race Course Road\", \"pinCode\" : \"641018\", \"latitude\" : 11.0168, \"state\" : \"Tamil Nadu\", \"longitude\" : 76.9558 }, \"name\" : \"Ravi Kumar\", \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\" }, \"internalProcessingStatus\" : \"Processing\", \"deliveryType\" : 0, \"parcelDetails\" : { \"volume\" : 0.00915, \"weight\" : 4.5, \"dimensions\" : { \"length\" : 30.5, \"width\" : 20.0, \"height\" : 15.0 } }, \"sourceLocation\" : { \"city\" : \"Coimbatore\", \"street\" : \"15, Race Course Road\", \"pinCode\" : \"641018\", \"latitude\" : 11.0168, \"state\" : \"Tamil Nadu\", \"longitude\" : 76.9558 }, \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"assignedVehicleId\" : \"TN38AB1234\", \"deliveryDate\" : \"2025-05-04T15:30:00Z\", \"orderDate\" : \"2025-05-04T11:00:00Z\", \"status\" : \"Pending\" }, { \"customerResponse\" : { \"phoneNumber\" : \"+919876543210\", \"address\" : { \"city\" : \"Coimbatore\", \"street\" : \"15, Race Course Road\", \"pinCode\" : \"641018\", \"latitude\" : 11.0168, \"state\" : \"Tamil Nadu\", \"longitude\" : 76.9558 }, \"name\" : \"Ravi Kumar\", \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\" }, \"internalProcessingStatus\" : \"Processing\", \"deliveryType\" : 0, \"parcelDetails\" : { \"volume\" : 0.00915, \"weight\" : 4.5, \"dimensions\" : { \"length\" : 30.5, \"width\" : 20.0, \"height\" : 15.0 } }, \"sourceLocation\" : { \"city\" : \"Coimbatore\", \"street\" : \"15, Race Course Road\", \"pinCode\" : \"641018\", \"latitude\" : 11.0168, \"state\" : \"Tamil Nadu\", \"longitude\" : 76.9558 }, \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"assignedVehicleId\" : \"TN38AB1234\", \"deliveryDate\" : \"2025-05-04T15:30:00Z\", \"orderDate\" : \"2025-05-04T11:00:00Z\", \"status\" : \"Pending\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"message\" : \"Order not found.\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"message\" : \"Order not found.\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
